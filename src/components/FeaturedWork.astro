---
import IconGithub from "./icons/IconGithub.astro";
import IconExternal from "./icons/IconExternal.astro";
import "swiper/css";
import "swiper/css/pagination";
import "swiper/css/effect-fade";
// import 'swiper/css/navigation';

// OLD/SIMPLE: Load all portfolio items from individual YAML files - clean like the blog example!
// import { getCollection } from 'astro:content';
// const portfolioEntries = await getCollection('portfolio');
// const portfolioItems = portfolioEntries.map((entry: any) => entry.data);

// Load and sort portfolio items - featured first, then by date (newest first)
import { getCollection } from "astro:content";
const portfolioEntries = await getCollection("portfolio", ({ data }) => {
  return data.status === "published"; // Only published items
});

const portfolioItems = portfolioEntries
  .map((entry) => entry.data)
  .sort((a, b) => {
    // Featured items first
    if (a.featured !== b.featured) {
      return b.featured ? 1 : -1;
    }
    // Then by date (newest first)
    return new Date(b.date).getTime() - new Date(a.date).getTime();
  });
---

<section
  class="featured bg-gray-lighter dark:bg-gray-dark overflow-hidden relative pb-0!"
  id="portfolio"
>
  <!-- Progress bar - using Swiper's built-in pagination -->
  <div class="swiper-pagination absolute top-0 left-0 w-full h-1 z-10"></div>

  <div class="container-bootstrap relative">
    <div class="grid md:grid-cols-12 -mx-[15px]">
      <div class="md:col-span-10 md:col-start-2 px-[15px]">
        <div class="grid md:grid-cols-12 -mx-[15px]">
          <div
            class="md:col-span-5 lg:col-span-4 px-[15px] md:pr-0 min-h-[760px] sm:min-h-[625px] xl:min-h-[550px] overflow-hidden"
          >
            <!-- overflow-hidden TODO double check flickering -->
            <div class="relative">
              <h2
                class="font-serif font-light leading-[1.1] mb-3 uppercase text-[46px] mt-0"
              >
                Featured<br />work
              </h2>
              <!-- Navigation -->
              <span
                class="swiper-navigation absolute top-0 right-0 inline-flex items-center justify-center gap-4 leading-none"
              >
                <button
                  class="swiper-button swiper-button-prev font-serif text-[90px] text-primary"
                  type="button"
                  aria-label="Previous portfolio item"
                >
                  ‹
                </button>
                <button
                  class="swiper-button swiper-button-next font-serif text-[90px] text-primary"
                  type="button"
                  aria-label="Next portfolio item"
                >
                  ›
                </button>
              </span>
            </div>

            <!-- Descriptions swiper -->
            <div class="swiper portfolio-descriptions-swiper">
              <div class="swiper-wrapper">
                {
                  portfolioItems.map((item: any) => (
                    <div
                      data-id={item.id}
                      data-hash={item.id}
                      class="swiper-slide"
                    >
                      {/* class="starting:opacity-0 transition-opacity" */}
                      <h3
                        class="font-sans font-light leading-[1.1] text-lg mb-[30px] normal-case"
                        set:html={item.title}
                      />
                      <img
                        src={`img/portfolio/${item.id}-1214x758.webp?ver=28082025`}
                        alt={item.title}
                        class="w-full h-auto mb-3 sm:hidden"
                        width="607"
                        height="379"
                      />
                      <Fragment set:html={item.content} />
                      <p class="sr-only">Tech stack:</p>
                      {item.skills && item.skills.length > 0 && (
                        <ul class="my-6 dark:opacity-50">
                          {item.skills.map((skill: any) => (
                            <li class="badge mb-1.5 mr-1.5">{skill.name}</li>
                          ))}
                        </ul>
                      )}
                      <p>
                        <a
                          onclick={`trackOutboundLink('${item.link.url}'); return false;`}
                          href={item.link.url}
                          class="text-primary font-normal text-lg dark:mix-blend-plus-lighter"
                          rel="noopener noreferrer"
                        >
                          <span set:html={item.link.text} />
                          <IconExternal class="inline size-4 shrink-0" />
                        </a>

                        {item.github?.url && (
                          <a
                            onclick={`trackOutboundLink('${item.github.url}'); return false;`}
                            href={item.github.url}
                            class="text-primary font-normal text-lg dark:mix-blend-plus-lighter ml-4 size-6 rounded-full"
                            rel="noopener noreferrer"
                          >
                            <span class="sr-only">View on GitHub</span>
                            <IconGithub class="inline size-6" />
                          </a>
                        )}
                      </p>
                    </div>
                  ))
                }
              </div>
            </div>

            <!-- <ul class="list-unstyled portfolio-descriptions">
              // TODO: max-[320px]:min-h-[400px] max-sm:min-h-[320px] max-md:min-h-[220px]
              {
                portfolioItems.map((item: any) => (
                  <li
                    data-id={item.id}
                    class="starting:opacity-0 transition-opacity"
                  >
                    <h3
                      class="font-sans font-light leading-[1.1] text-lg mb-[30px] normal-case"
                      set:html={item.title}
                    />
                    <img
                      src={`img/portfolio/${item.id}-1214x758.webp?ver=28082025`}
                      alt={item.title}
                      class="w-full h-auto mb-3 sm:hidden"
                      width="607"
                      height="379"
                    />
                    <Fragment set:html={item.content} />
                    <p class="sr-only">Tech stack:</p>
                    {item.skills && item.skills.length > 0 && (
                      <ul class="my-6 dark:opacity-50">
                        {item.skills.map((skill: any) => (
                          <li class="badge mb-1.5 mr-1.5">{skill.name}</li>
                        ))}
                      </ul>
                    )}
                    <p>
                      <a
                        onclick={`trackOutboundLink('${item.link.url}'); return false;`}
                        href={item.link.url}
                        class="text-primary font-normal text-lg dark:mix-blend-plus-lighter"
                        rel="noopener noreferrer"
                      >
                        <span set:html={item.link.text} />
                        <IconExternal class="inline size-4 shrink-0" />
                      </a>

                      {item.github?.url && (
                        <a
                          onclick={`trackOutboundLink('${item.github.url}'); return false;`}
                          href={item.github.url}
                          class="text-primary font-normal text-lg dark:mix-blend-plus-lighter ml-4 size-6 rounded-full"
                          rel="noopener noreferrer"
                        >
                          <span class="sr-only">View on GitHub</span>
                          <IconGithub class="inline size-6" />
                        </a>
                      )}
                    </p>
                  </li>
                ))
              }
            </ul> -->
          </div>
          <div
            class="md:col-span-7 lg:col-span-8 relative max-w-[calc(100vw-55px)] md:max-w-none"
          >
            <!-- max-w-[calc(100vw-55px)] sm:max-w-none TODO -->
            <div class="nexus10 overflow-hidden" data-speed="1.05">
              <div class="screen-tablet">
                <!-- Vertical swiper for tablet -->
                <div class="swiper portfolio-tablet-swiper">
                  <div class="swiper-wrapper">
                    {
                      portfolioItems.map((item: any) => (
                        <div
                          data-id={item.id}
                          data-hash={item.id}
                          class="swiper-slide"
                        >
                          <img
                            src={`img/portfolio/${item.id}-1214x758.webp?ver=28082025`}
                            alt={item.title}
                            class="w-full h-full object-cover"
                            width="607"
                            height="379"
                          />
                        </div>
                      ))
                    }
                  </div>
                </div>
              </div>
              <div class="nexus5 pointer-events-none" data-speed="1.05">
                <div class="screen-smartphone">
                  <!-- Horizontal swiper for smartphone -->
                  <div
                    class="swiper portfolio-smartphone-swiper pointer-events-auto"
                  >
                    <div class="swiper-wrapper">
                      {
                        portfolioItems.map((item: any) => (
                          <div
                            data-id={item.id}
                            data-hash={item.id}
                            class="swiper-slide"
                          >
                            <img
                              src={`img/portfolio/${item.id}-356x632.webp?ver=28082025`}
                              alt={item.title}
                              class="w-full h-full object-cover"
                              width="178"
                              height="316"
                            />
                          </div>
                        ))
                      }
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Navigation -->
  <!-- <span
    class="swiper-navigation flex items-center justify-center gap-4 font-serif text-[90px] leading-none"
  >
    <button
      class="swiper-button swiper-button-prev size-auto!"
      type="button"
      aria-label="Previous portfolio item"
    >
      ‹
    </button>
    <button
      class="swiper-button swiper-button-next size-auto!"
      type="button"
      aria-label="Next portfolio item"
    >
      ›
    </button>
  </span> -->

  <!-- Thumbs gallery -->
  <div class="swiper portfolio-thumbs-swiper mt-20 w-full">
    <div class="swiper-wrapper">
      {
        portfolioItems.map((item: any) => (
          <div
            data-id={item.id}
            data-hash={item.id}
            class="swiper-slide cursor-pointer opacity-25 dark:opacity-25 hover:opacity-75"
          >
            <img
              src={`img/portfolio/${item.id}-1214x758.webp?ver=28082025`}
              alt={item.title}
              class="w-full h-full object-cover"
              width="607"
              height="379"
            />
          </div>
        ))
      }
    </div>
  </div>
</section>

<!-- Import Swiper JS -->
<script
  src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"
  is:inline></script>

<script is:inline define:vars={{ portfolioItems }}>
  document.addEventListener("DOMContentLoaded", function () {
    // Initialize thumbs swiper FIRST
    const thumbsSwiper = new Swiper(".portfolio-thumbs-swiper", {
      spaceBetween: 0,
      slidesPerView: 4,
      breakpoints: {
        480: {
          slidesPerView: 4,
        },
        768: {
          slidesPerView: 6,
        },
        992: {
          slidesPerView: 8,
        },
        1200: {
          slidesPerView: 8,
        },
        1600: {
          slidesPerView: 12,
        },
      },
      freeMode: true,
      watchSlidesProgress: true,
      loop: true,
    });

    // Initialize smartphone swiper (horizontal) FIRST
    const smartphoneSwiper = new Swiper(".portfolio-smartphone-swiper", {
      direction: "horizontal",
      loop: true,
      spaceBetween: 0,
      // mousewheel: true,
      // hashNavigation: {
      //   watchState: true,
      // },
      thumbs: {
        swiper: thumbsSwiper,
      },
      pagination: {
        el: ".swiper-pagination",
        type: "progressbar",
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
      // NOTE: just for syntax reference, old tab-style functionality
      // on: {
      //   slideChange: function () {
      //     const active = this.slides[this.activeIndex];
      //     const id = active && active.getAttribute("data-id");
      //     showDescriptionById(id);
      //   },
      // },
    });

    // Initialize tablet swiper (vertical) SECOND - now smartphoneSwiper exists
    const tabletSwiper = new Swiper(".portfolio-tablet-swiper", {
      direction: "vertical",
      loop: true,
      spaceBetween: 0,
      // mousewheel: true,
      touchEventsTarget: "container", // Enable touch events
      thumbs: {
        swiper: thumbsSwiper,
      },
    });

    // Initialize descriptions swiper THIRD - now both smartphoneSwiper/tabletSwiper exists
    const descriptionsSwiper = new Swiper(".portfolio-descriptions-swiper", {
      loop: true,
      spaceBetween: 0,
      effect: window.innerWidth <= 767 ? "slide" : "fade",
      fadeEffect: {
        crossFade: true,
      },
      thumbs: {
        swiper: thumbsSwiper,
      },
    });

    // Sync swipers using controller - prevent recursion with single controller approach
    // Use smartphone as the main controller only
    smartphoneSwiper.controller.control = [tabletSwiper, descriptionsSwiper];

    // Others only control the main one (no circular references)
    tabletSwiper.controller.control = smartphoneSwiper;
    descriptionsSwiper.controller.control = smartphoneSwiper;

    // Add keyboard navigation
    document.addEventListener("keydown", function (e) {
      if (e.key === "ArrowLeft") {
        smartphoneSwiper.slidePrev();
      } else if (e.key === "ArrowRight") {
        smartphoneSwiper.slideNext();
      }
    });
  });
</script>

<style>
  /* .swiper-pagination-progressbar {
    background-color: rgba(127, 127, 127, 0.15);
  } */

  .portfolio-thumbs-swiper .swiper-slide-thumb-active {
    opacity: 1;
    box-shadow: 0 0 0 4px var(--color-primary) inset !important;
    outline: 4px solid var(--color-primary);
    outline-offset: -4px;
    filter: none;
  }

  .portfolio-tablet-swiper,
  .portfolio-smartphone-swiper,
  .portfolio-descriptions-swiper {
    height: 100%;
  }

  .nexus10,
  .nexus5 {
    width: 800px;
    height: 600px;
    background-size: 100% 100%;
    position: absolute;
    cursor: pointer;
  }

  .nexus10 {
    background: url("../img/nexus10.webp?ver=28082025") center center no-repeat;
    background-size: 100% 100%;
    right: -300px;
    top: -40px;
  }

  @media (min-width: 768px) and (max-width: 991px) {
    .nexus10 {
      right: -450px;
    }
  }

  @media (max-width: 767px) {
    .nexus10 {
      position: static;
      margin: 20px 0;
    }
  }

  .nexus5 {
    background: url("../img/nexus5.webp?ver=28082025") center center no-repeat;
    background-size: 100% 100%;
  }

  .screen-tablet {
    transform: rotateZ(0deg);
    position: absolute;
    overflow: hidden;
    width: 607px;
    height: 379px;
    top: 87px;
    left: 114px;
  }

  .screen-smartphone {
    transform: rotateZ(0deg);
    position: absolute;
    overflow: hidden;
    width: 178px;
    height: 316px;
    top: 216px;
    left: 27px;
  }
</style>
