<section class="bg-black cursor-all-scroll overflow-hidden" id="intermission">
  <div class="container-bootstrap relative min-h-[300px]">
    <div class="grid md:grid-cols-12 -mx-[15px]">
      <div class="md:col-span-10 md:col-start-2 px-[15px]">
        <h2
          class="font-serif font-light leading-[1.1] mb-6 uppercase text-[46px] text-white"
        >
          Inter<wbr />mission
        </h2>
        <p class="mb-6 text-white">
          Read our <a
            onclick="trackOutboundLinkWithDelay('https://cv.tothtamas.tt/'); return false;"
            href="https://cv.tothtamas.tt/"
            class="text-primary">freelancing manifesto</a
          > to see if we're a match.
        </p>
        <div class="cursor-follower" id="cursorFollower">
          <img
            src="img/eva-pod-cursor64x64.png?ver=28082025"
            alt="Eva Pod Cursor"
            class="w-full h-full object-contain"
          />
        </div>
      </div>
    </div>
    <div class="animation-placeholder">
      <div class="animation-spin">
        <a
          class="aspect-square size-11 flex items-center justify-center cursor-grabbing"
          onclick="trackOutboundLinkWithDelay('https://cv.tothtamas.tt/'); return false;"
          href="https://cv.tothtamas.tt/"
          ><i class="overflow-visible!">poole</i></a
        >
      </div>
    </div>
  </div>
</section>

<style>
  .cursor-follower {
    position: absolute;
    pointer-events: none;
    width: 64px;
    height: 64px;
    transition: opacity 0.5s;
  }

  @media (hover: none),
    (any-hover: none),
    (pointer: coarse),
    (any-pointer: coarse) {
    .cursor-follower {
      display: none !important;
    }
  }

  /* Hide cursor follower when hovering over grabbing cursor elements */
  a:hover ~ .cursor-follower,
  #intermission:has(a:hover) .cursor-follower {
    opacity: 0 !important;
  }

  .animation-placeholder a,
  .animation-placeholder a:active,
  .animation-placeholder a:focus,
  .animation-placeholder a:hover {
    color: white;
  }

  /* Dr. Frank Poole */
  .animation-placeholder {
    font-size: 30px;
    cursor: pointer;

    a {
      &,
      &:active,
      &:focus,
      &:hover {
        color: white;
        border-radius: 100%;
        outline-offset: 10px;
      }
    }
  }

  .animation-spin {
    animation: spinZ 4s infinite linear;
    position: absolute;
    right: 100px;
    bottom: 50px;
    color: white;
    font-size: inherit;

    span {
      display: inline-block;
    }
  }

  .animation-flyoff {
    animation: enlarge 2s 1 cubic-bezier(1, 0, 1, 0);
  }

  @keyframes spinX {
    0% {
      transform: rotateX(0deg);
    }

    100% {
      transform: rotateX(180deg);
    }
  }

  @keyframes spinZ {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes enlarge {
    0% {
      font-size: 30px;
    }

    100% {
      font-size: 3000px;
    }
  }
</style>

<script is:inline>
  // Dr. Frank Poole
  const animationPlaceholder = document.querySelector(".animation-placeholder");
  if (animationPlaceholder) {
    animationPlaceholder.addEventListener("click", function () {
      this.classList.add("animation-flyoff");
      setTimeout(function () {
        console.debug(
          "setTimeout branch executed for Dr. Frank Poole animation"
        );
        const placeholder = document.querySelector(".animation-placeholder");
        if (placeholder) {
          placeholder.classList.remove("animation-flyoff");
          placeholder.style.display = "none";
        }
      }, 1982);
      if (
        typeof ga !== "undefined" &&
        ga.hasOwnProperty("loaded") &&
        ga.loaded === true
      ) {
        ga("send", "event", "button", "click", "Dr. Frank Poole");
      }
    });
  }
</script>

<script is:inline>
  // Wait for GSAP to be ready
  function initCursorFollower() {
    const canHover = window.matchMedia("(any-hover: hover)").matches;
    const hasFinePointer = window.matchMedia("(any-pointer: fine)").matches;
    if (!(canHover && hasFinePointer)) return;

    if (!window.gsap) return;

    const { gsap } = window;
    const intermissionSection = document.getElementById("intermission");

    if (!intermissionSection) return;

    // Use the element directly and center via xPercent/yPercent (no CSS changes)
    const follower = document.getElementById("cursorFollower");
    if (!follower) return;

    // Ensure consistent positioning model independent of initial static position
    gsap.set(follower, {
      position: "absolute",
      left: 0,
      top: 0,
      xPercent: -50,
      yPercent: -50,
    });

    // Coordinates must be relative to the same containing block the absolute element uses
    const getContainerRect = () => {
      const container =
        /** @type {HTMLElement|null} */ (follower.offsetParent) ||
        intermissionSection;
      return container.getBoundingClientRect();
    };

    // Smooth lag while moving
    const xTo = gsap.quickTo(follower, "x", {
      duration: 0.6,
      ease: "power1.out",
    });
    const yTo = gsap.quickTo(follower, "y", {
      duration: 0.6,
      ease: "power1.out",
    });

    // Track mouse only inside the intermission section
    intermissionSection.addEventListener("mousemove", (e) => {
      const rect = getContainerRect();
      // With xPercent/yPercent = -50, x/y should be the raw cursor position in the container's coordinate space
      const targetX = e.clientX - rect.left;
      const targetY = e.clientY - rect.top;

      // Lag follow
      xTo(targetX);
      yTo(targetY);
    });
  }

  // Listen for GSAP ready event
  document.addEventListener("gsap:ready", initCursorFollower);

  // Fallback if GSAP is already loaded
  if (window.gsap) {
    initCursorFollower();
  }
</script>
